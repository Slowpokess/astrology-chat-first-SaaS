{"ast":null,"code":"// client/src/services/apiService.js\nimport axios from'axios';const API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:5001/api';// Получение данных о криптовалютах\nexport const fetchLatestCryptoData=async function(){let start=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;let limit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:10;try{const response=await axios.get(`${API_BASE_URL}/predictions/crypto-data`,{params:{start,limit}});return response.data;}catch(error){console.error('Error fetching crypto data:',error);throw error;}};// Обеспечиваем обратную совместимость\nexport const getCryptoPrices=fetchLatestCryptoData;// Генерация сатирического предсказания\nexport const generateSarcasticPrediction=async crypto=>{try{const response=await axios.post(`${API_BASE_URL}/predictions/generate`,{crypto});return response.data;}catch(error){console.error('Error generating prediction:',error);throw error;}};// Анализ криптопортфеля\nexport const analyzePortfolio=async portfolio=>{try{const response=await axios.post(`${API_BASE_URL}/portfolio/analyze`,{portfolio});return response.data;}catch(error){console.error('Error analyzing portfolio:',error);throw error;}};// Генерация ретроактивного \"гения\"\nexport const generateRetroGenius=async cryptoId=>{try{const response=await axios.post(`${API_BASE_URL}/retrogen/generate`,{cryptoId});return response.data;}catch(error){console.error('Error generating retro genius:',error);throw error;}};// Генерация астрологического графика\nexport const generateAstrologicalChart=async(cryptoId,timeframe)=>{try{const response=await axios.post(`${API_BASE_URL}/astrology/chart`,{cryptoId,timeframe});return response.data;}catch(error){console.error('Error generating astrological chart:',error);throw error;}};// Получение индекса доверия\nexport const getTrustIndex=async()=>{try{const response=await axios.get(`${API_BASE_URL}/trust-index`);return response.data;}catch(error){console.error('Error fetching trust index:',error);throw error;}};// Получение истории индекса доверия\nexport const getTrustIndexHistory=async function(){let days=arguments.length>0&&arguments[0]!==undefined?arguments[0]:30;try{const response=await axios.get(`${API_BASE_URL}/trust-index/history`,{params:{days}});return response.data;}catch(error){console.error('Error fetching trust index history:',error);throw error;}};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","fetchLatestCryptoData","start","arguments","length","undefined","limit","response","get","params","data","error","console","getCryptoPrices","generateSarcasticPrediction","crypto","post","analyzePortfolio","portfolio","generateRetroGenius","cryptoId","generateAstrologicalChart","timeframe","getTrustIndex","getTrustIndexHistory","days"],"sources":["/Users/macbook/Documents/ass-plattform/client/src/services/apiService.js"],"sourcesContent":["// client/src/services/apiService.js\nimport axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n\n// Получение данных о криптовалютах\nexport const fetchLatestCryptoData = async (start = 0, limit = 10) => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/predictions/crypto-data`, {\n      params: { start, limit }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching crypto data:', error);\n    throw error;\n  }\n};\n\n// Обеспечиваем обратную совместимость\nexport const getCryptoPrices = fetchLatestCryptoData;\n\n// Генерация сатирического предсказания\nexport const generateSarcasticPrediction = async (crypto) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/predictions/generate`, { crypto });\n    return response.data;\n  } catch (error) {\n    console.error('Error generating prediction:', error);\n    throw error;\n  }\n};\n\n// Анализ криптопортфеля\nexport const analyzePortfolio = async (portfolio) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/portfolio/analyze`, { portfolio });\n    return response.data;\n  } catch (error) {\n    console.error('Error analyzing portfolio:', error);\n    throw error;\n  }\n};\n\n// Генерация ретроактивного \"гения\"\nexport const generateRetroGenius = async (cryptoId) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/retrogen/generate`, { cryptoId });\n    return response.data;\n  } catch (error) {\n    console.error('Error generating retro genius:', error);\n    throw error;\n  }\n};\n\n// Генерация астрологического графика\nexport const generateAstrologicalChart = async (cryptoId, timeframe) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/astrology/chart`, { \n      cryptoId, \n      timeframe \n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error generating astrological chart:', error);\n    throw error;\n  }\n};\n\n// Получение индекса доверия\nexport const getTrustIndex = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/trust-index`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching trust index:', error);\n    throw error;\n  }\n};\n\n// Получение истории индекса доверия\nexport const getTrustIndexHistory = async (days = 30) => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/trust-index/history`, {\n      params: { days }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching trust index history:', error);\n    throw error;\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}