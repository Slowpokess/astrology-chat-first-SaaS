{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Получение данных о криптовалютах\nexport const fetchLatestCryptoData = async (start = 0, limit = 10) => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/predictions/crypto-data`, {\n      params: {\n        start,\n        limit\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching crypto data:', error);\n    throw error;\n  }\n};\n\n// Генерация сатирического предсказания\nexport const generateSarcasticPrediction = async crypto => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/predictions/generate`, {\n      crypto\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error generating prediction:', error);\n    throw error;\n  }\n};\n\n// Анализ криптопортфеля\nexport const analyzePortfolio = async portfolio => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/portfolio/analyze`, {\n      portfolio\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error analyzing portfolio:', error);\n    throw error;\n  }\n};\n\n// Генерация ретроактивного \"гения\"\nexport const generateRetroGenius = async cryptoId => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/retrogen/generate`, {\n      cryptoId\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error generating retro genius:', error);\n    throw error;\n  }\n};\n\n// Генерация астрологического графика\nexport const generateAstrologicalChart = async (cryptoId, timeframe) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/astrology/chart`, {\n      cryptoId,\n      timeframe\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error generating astrological chart:', error);\n    throw error;\n  }\n};\n\n// Получение индекса доверия\nexport const getTrustIndex = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/trust-index`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching trust index:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","fetchLatestCryptoData","start","limit","response","get","params","data","error","console","generateSarcasticPrediction","crypto","post","analyzePortfolio","portfolio","generateRetroGenius","cryptoId","generateAstrologicalChart","timeframe","getTrustIndex"],"sources":["/Users/macbook/Documents/ass-plattform/client/src/services/apiService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Получение данных о криптовалютах\nexport const fetchLatestCryptoData = async (start = 0, limit = 10) => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/predictions/crypto-data`, {\n      params: { start, limit }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching crypto data:', error);\n    throw error;\n  }\n};\n\n// Генерация сатирического предсказания\nexport const generateSarcasticPrediction = async (crypto) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/predictions/generate`, { crypto });\n    return response.data;\n  } catch (error) {\n    console.error('Error generating prediction:', error);\n    throw error;\n  }\n};\n\n// Анализ криптопортфеля\nexport const analyzePortfolio = async (portfolio) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/portfolio/analyze`, { portfolio });\n    return response.data;\n  } catch (error) {\n    console.error('Error analyzing portfolio:', error);\n    throw error;\n  }\n};\n\n// Генерация ретроактивного \"гения\"\nexport const generateRetroGenius = async (cryptoId) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/retrogen/generate`, { cryptoId });\n    return response.data;\n  } catch (error) {\n    console.error('Error generating retro genius:', error);\n    throw error;\n  }\n};\n\n// Генерация астрологического графика\nexport const generateAstrologicalChart = async (cryptoId, timeframe) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/astrology/chart`, { \n      cryptoId, \n      timeframe \n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error generating astrological chart:', error);\n    throw error;\n  }\n};\n\n// Получение индекса доверия\nexport const getTrustIndex = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/trust-index`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching trust index:', error);\n    throw error;\n  }\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;;AAEjF;AACA,OAAO,MAAMC,qBAAqB,GAAG,MAAAA,CAAOC,KAAK,GAAG,CAAC,EAAEC,KAAK,GAAG,EAAE,KAAK;EACpE,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,GAAGR,YAAY,0BAA0B,EAAE;MAC1ES,MAAM,EAAE;QAAEJ,KAAK;QAAEC;MAAM;IACzB,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,2BAA2B,GAAG,MAAOC,MAAM,IAAK;EAC3D,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAMR,KAAK,CAACgB,IAAI,CAAC,GAAGf,YAAY,uBAAuB,EAAE;MAAEc;IAAO,CAAC,CAAC;IACrF,OAAOP,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMK,gBAAgB,GAAG,MAAOC,SAAS,IAAK;EACnD,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMR,KAAK,CAACgB,IAAI,CAAC,GAAGf,YAAY,oBAAoB,EAAE;MAAEiB;IAAU,CAAC,CAAC;IACrF,OAAOV,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMO,mBAAmB,GAAG,MAAOC,QAAQ,IAAK;EACrD,IAAI;IACF,MAAMZ,QAAQ,GAAG,MAAMR,KAAK,CAACgB,IAAI,CAAC,GAAGf,YAAY,oBAAoB,EAAE;MAAEmB;IAAS,CAAC,CAAC;IACpF,OAAOZ,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMS,yBAAyB,GAAG,MAAAA,CAAOD,QAAQ,EAAEE,SAAS,KAAK;EACtE,IAAI;IACF,MAAMd,QAAQ,GAAG,MAAMR,KAAK,CAACgB,IAAI,CAAC,GAAGf,YAAY,kBAAkB,EAAE;MACnEmB,QAAQ;MACRE;IACF,CAAC,CAAC;IACF,OAAOd,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;IAC5D,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMW,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI;IACF,MAAMf,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,GAAGR,YAAY,cAAc,CAAC;IAC/D,OAAOO,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}