// services/aiService.js - –ó–¥–µ—Å—å –º—ã –∑–∞—Å—Ç–∞–≤–ª—è–µ–º –ò–ò –±—ã—Ç—å —Ç–∞–∫–∏–º –∂–µ "—É–º–Ω—ã–º", –∫–∞–∫ –∫—Ä–∏–ø—Ç–æ–∞–Ω–∞–ª–∏—Ç–∏–∫–∏
const OpenAI = require('openai');
const axios = require('axios');
const dotenv = require('dotenv');

// –ó–∞–≥—Ä—É–∑–∫–∞ —Å–µ–∫—Ä–µ—Ç–æ–≤ (–ø–æ—á—Ç–∏ –∫–∞–∫ –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ –∫–ª—é—á–∏, –Ω–æ –º—ã –Ω–∞–¥–µ–µ–º—Å—è, —á—Ç–æ —ç—Ç–∏ —Ö—Ä–∞–Ω—è—Ç—Å—è –ª—É—á—à–µ)
dotenv.config();

// –î–∞–∂–µ –ò–ò –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å –∫—Ä–∏–ø—Ç–æ—Ä—ã–Ω–æ–∫, –Ω–æ –æ–Ω —Ö–æ—Ç—è –±—ã —É–º–µ–µ—Ç —Å–º–µ—à–Ω–æ –æ–± —ç—Ç–æ–º –ø–∏—Å–∞—Ç—å
const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY
});

// –ö—ç—à –¥–ª—è –º–∏–Ω–∏–º–∏–∑–∞—Ü–∏–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤ –Ω–∞ API (–ø–æ—á—Ç–∏ –∫–∞–∫ —Ç–≤–æ–π –ø–ª–∞–Ω —ç–∫–æ–Ω–æ–º–∏–∏ –Ω–∞ –∫–æ—Ñ–µ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –±–∏—Ç–∫–æ–∏–Ω–æ–≤)
const predictionCache = new Map();
const portfolioCache = new Map();
const retroCache = new Map();

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞—Ö
const getCryptoPrices = async () => {
  try {
    console.log('üîç –ò—â–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã... –∏–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—Ö–æ–∂–µ–µ –Ω–∞ –Ω–∏—Ö');
    const response = await axios.get('https://api.coingecko.com/api/v3/coins/markets', {
      params: {
        vs_currency: 'usd',
        order: 'market_cap_desc',
        per_page: 100,
        page: 1,
        sparkline: false
      }
    });
    
    console.log(`‚úÖ –ü–æ–ª—É—á–∏–ª–∏ –¥–∞–Ω–Ω—ã–µ –æ ${response.data.length} –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞—Ö. –¢–µ–ø–µ—Ä—å –º–æ–∂–µ–º –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏—Ö –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞—Ç—å!`);
    return response.data;
  } catch (error) {
    console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞—Ö. –í–∏–¥–∏–º–æ, —Ä—ã–Ω–æ–∫ —Ç–æ–∂–µ –≤ –Ω–µ–¥–æ—É–º–µ–Ω–∏–∏:', error);
    return [
      { id: 'bitcoin', name: 'Bitcoin', symbol: 'btc', current_price: 45000 },
      { id: 'ethereum', name: 'Ethereum', symbol: 'eth', current_price: 3000 },
      { id: 'dogecoin', name: 'Dogecoin', symbol: 'doge', current_price: 0.15 },
      { id: 'cardano', name: 'Cardano', symbol: 'ada', current_price: 0.5 },
      { id: 'solana', name: 'Solana', symbol: 'sol', current_price: 100 }
    ];
  }
};

const generatePrediction = async (cryptoData) => {
  // –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–µ–º –ø—Ä–æ–º–ø—Ç
  const prompt = `
    –°–æ–∑–¥–∞–π —Å–∞—Ç–∏—Ä–∏—á–µ—Å–∫–æ–µ, —è–∑–≤–∏—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ —Ü–µ–Ω—ã –∏ –±—É–¥—É—â–µ–≥–æ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã ${cryptoData.name} (${cryptoData.symbol.toUpperCase()}).
    –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: $${cryptoData.current_price}
    
    –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
    1. –ò—Å–ø–æ–ª—å–∑—É–π –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Ç–æ–∫—Å–∏—á–Ω—ã–π, —Å–∞—Ä–∫–∞—Å—Ç–∏—á–Ω—ã–π —Ç–æ–Ω
    2. –í–∫–ª—é—á–∏ –∞–±—Å—É—Ä–¥–Ω—ã–µ, –Ω–æ –ø—Å–µ–≤–¥–æ–Ω–∞—É—á–Ω—ã–µ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏—è
    3. –ü—Ä–∏—Ç–≤–æ—Ä–∏—Å—å —Å–∞–º–æ—É–≤–µ—Ä–µ–Ω–Ω—ã–º "—ç–∫—Å–ø–µ—Ä—Ç–æ–º"
    4. –ß–µ–º –±–æ–ª–µ–µ —É–≤–µ—Ä–µ–Ω–Ω–æ –∑–≤—É—á–∏—Ç –ø—Ä–æ–≥–Ω–æ–∑, —Ç–µ–º –∞–±—Å—É—Ä–¥–Ω–µ–µ –æ–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å
    5. –ò—Å–ø–æ–ª—å–∑—É–π –Ω–µ–ª–µ–ø—ã–µ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏ —Å –Ω–µ—Å–≤—è–∑–∞–Ω–Ω—ã–º–∏ —è–≤–ª–µ–Ω–∏—è–º–∏
    6. –î–æ–±–∞–≤—å –≤—ã–¥—É–º–∞–Ω–Ω—ã–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Ç–µ—Ä–º–∏–Ω—ã
    
    –§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ JSON:
    {
      "text": "–°–∞—Ç–∏—Ä–∏—á–µ—Å–∫–∏–π –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ 1-2 –∞–±–∑–∞—Ü–∞",
      "confidence": —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 100 (—á–µ–º –∞–±—Å—É—Ä–¥–Ω–µ–µ –ø—Ä–æ–≥–Ω–æ–∑, —Ç–µ–º –≤—ã—à–µ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å),
      "analysis": "–ü—Å–µ–≤–¥–æ–Ω–∞—É—á–Ω–æ–µ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ –Ω–∞ 1-2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è"
    }
  `;

  // –ó–∞—Ç–µ–º –ª–æ–≥–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
  console.log(`–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –¥–ª—è ${cryptoData.name} (${cryptoData.symbol})`);
  console.log("–û—Ç–ø—Ä–∞–≤–ª—è–µ–º—ã–π –∑–∞–ø—Ä–æ—Å –∫ OpenAI:", prompt);

  // –°–æ–∑–¥–∞–µ–º –∫–ª—é—á –∫—ç—à–∞
  const today = new Date().toISOString().split('T')[0];
  const cacheKey = `${cryptoData.id || cryptoData.name}_${today}`;
  
  // –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∏–º –∫—ç—à –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  // if (predictionCache.has(cacheKey)) {
  //   console.log(`üß† –ù–∞—à–ª–∏ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –≤ –∫—ç—à–µ! –≠–∫–æ–Ω–æ–º–∏–º –¥–µ–Ω—å–≥–∏ –Ω–∞ API, –≤ –æ—Ç–ª–∏—á–∏–µ –æ—Ç —Ç–≤–æ–∏—Ö –∫—Ä–∏–ø—Ç–æ-—Ç—Ä–∞—Ç.`);
  //   return predictionCache.get(cacheKey);
  // }
  
  try {
    const response = await openai.chat.completions.create({
      model: "gpt-3.5-turbo", // –ú–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –¥—Ä—É–≥—É—é –º–æ–¥–µ–ª—å, –∫–æ—Ç–æ—Ä–∞—è –≤–∞–º –¥–æ—Å—Ç—É–ø–Ω–∞
      messages: [
        { role: "system", content: "–¢—ã - —Å–∞—Ä–∫–∞—Å—Ç–∏—á–Ω—ã–π, —Ç–æ–∫—Å–∏—á–Ω—ã–π –ò–ò-–ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç–µ–ª—å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ —Å–æ–∑–¥–∞–≤–∞—Ç—å –Ω–∞–º–µ—Ä–µ–Ω–Ω–æ –∞–±—Å—É—Ä–¥–Ω—ã–µ, –Ω–æ –∑–≤—É—á–∞—â–∏–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è." },
        { role: "user", content: prompt }
      ],
      temperature: 0.9,
      // –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∞–µ–º —Ñ–æ—Ä–º–∞—Ç JSON, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–∏ –∑–∞–ø—Ä–æ—Å
      // response_format: { type: "json_object" }
    });
    
    console.log("–û—Ç–≤–µ—Ç –æ—Ç OpenAI:", response.choices[0].message.content);
    
    let result;
    try {
      // –ü–æ–ø—Ä–æ–±—É–µ–º —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –æ—Ç–≤–µ—Ç –∫–∞–∫ JSON
      result = JSON.parse(response.choices[0].message.content);
    } catch (parseError) {
      console.log("–û—Ç–≤–µ—Ç –Ω–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON, —Å–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç –∏–∑ —Ç–µ–∫—Å—Ç–∞:", parseError);
      // –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –∫–∞–∫ JSON, —Å–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –≤—Ä—É—á–Ω—É—é
      result = {
        text: response.choices[0].message.content,
        confidence: Math.floor(Math.random() * 30) + 70, // –û—Ç 70 –¥–æ 100
        analysis: "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–µ—Ä–µ–¥–æ–≤—ã—Ö –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª –∏ –ø–æ–ª–µ—Ç–∞ —Ñ–∞–Ω—Ç–∞–∑–∏–∏."
      };
    }
    
    console.log(`‚úÖ –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–æ! –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: ${result.confidence}%. –ü—Ä–∏–º–µ—Ä–Ω–æ –∫–∞–∫ —É –≤—Å–µ—Ö –∫—Ä–∏–ø—Ç–æ–∞–Ω–∞–ª–∏—Ç–∏–∫–æ–≤.`);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫—ç—à
    predictionCache.set(cacheKey, result);
    return result;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è. –ù–∞—à –ò–ò —Ç–∞–∫–æ–π –∂–µ –Ω–µ–Ω–∞–¥–µ–∂–Ω—ã–π, –∫–∞–∫ –∏ —Å–æ–≤–µ—Ç—ã —Å Reddit:', error);
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
    return {
      text: `${cryptoData.name} –±—É–¥–µ—Ç –¥–µ–ª–∞—Ç—å —Ç–æ, —á—Ç–æ –¥–µ–ª–∞—é—Ç –≤—Å–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã - –∑–∞—Å—Ç–∞–≤–ª—è—Ç—å –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤ –Ω–µ—Ä–≤–Ω–∏—á–∞—Ç—å –∏ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –ø–ª–æ—Ö–∏–µ —Ä–µ—à–µ–Ω–∏—è. –ù–∞—à —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä "–ë–æ–ª—å—à–æ–π –ü–∞–ª–µ—Ü –í –ù–µ–±–æ" –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ —Ü–µ–Ω–∞ –º–æ–∂–µ—Ç –ø–æ–π—Ç–∏ –≤–≤–µ—Ä—Ö, –≤–Ω–∏–∑, –∏–ª–∏, –≤ —Ä–µ–¥–∫–∏—Ö —Å–ª—É—á–∞—è—Ö, –æ—Å—Ç–∞—Ç—å—Å—è –ø—Ä–µ–∂–Ω–µ–π.`,
      confidence: 85,
      analysis: "–û—Å–Ω–æ–≤–∞–Ω–æ –Ω–∞ –Ω–µ–ø—Ä–µ–ª–æ–∂–Ω–æ–º –∑–∞–∫–æ–Ω–µ FOMO –∏ –ø–∞–Ω–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–¥–∞–∂, –∞ —Ç–∞–∫–∂–µ –Ω–∞ –ø–æ–ª–æ–∂–µ–Ω–∏–∏ –ú–µ—Ä–∫—É—Ä–∏—è –≤ —Å–æ–∑–≤–µ–∑–¥–∏–∏ –¢–µ–ª—å—Ü–∞."
    };
  }
} 

// –û—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ –∞–Ω–∞–ª–æ–≥–∏–∏...

// –§–∏–Ω–∞–ª—å–Ω—ã–π —ç–∫—Å–ø–æ—Ä—Ç (–µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ, —á—Ç–æ –Ω–∞–¥–µ–∂–Ω–æ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –≤ —ç—Ç–æ–º –º–æ–¥—É–ª–µ)
module.exports = {
  getCryptoPrices,
  generatePrediction,
  // –î–æ–±–∞–≤—å—Ç–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ –º–µ—Ä–µ –∏—Ö —Å–æ–∑–¥–∞–Ω–∏—è
};