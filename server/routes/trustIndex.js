// routes/trustIndex.js - –î–ª—è –∏—Ä–æ–Ω–∏—á–Ω–æ-–æ–±—Ä–∞—Ç–Ω–æ–≥–æ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ —Ä—ã–Ω–æ—á–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–π
const express = require('express');
const router = express.Router();
const axios = require('axios');

// –ü–æ–ª—É—á–∏—Ç—å –∏–Ω–¥–µ–∫—Å –¥–æ–≤–µ—Ä–∏—è (–∫–æ—Ç–æ—Ä—ã–π –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ –∏–Ω–¥–µ–∫—Å –Ω–µ–¥–æ–≤–µ—Ä–∏—è)
router.get('/', async (req, res) => {
  try {
    console.log('üìä –ó–∞–ø—Ä–æ—Å –Ω–∞ –∏–Ω–¥–µ–∫—Å –¥–æ–≤–µ—Ä–∏—è. –ì–æ—Ç–æ–≤–∏–º –æ–±—Ä–∞—Ç–Ω—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä...');
    
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∞–Ω–∞–ª–∏–∑ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö –º–µ–¥–∏–∞ –∏ —Ä—ã–Ω–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    // –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ–±—â–µ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ —Ä—ã–Ω–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö (–µ—Å–ª–∏ –º–æ–∂–µ–º –∏—Ö –ø–æ–ª—É—á–∏—Ç—å)
    let marketSentiment;
    let sentimentSource = 'random';
    
    try {
      // –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–Ω–¥–µ–∫—Å —Å—Ç—Ä–∞—Ö–∞ –∏ –∂–∞–¥–Ω–æ—Å—Ç–∏ –æ—Ç Alternative.me API
      const fearGreedResponse = await axios.get('https://api.alternative.me/fng/');
      const fearGreedValue = fearGreedResponse.data.data[0].value;
      const fearGreedClassification = fearGreedResponse.data.data[0].value_classification;
      
      console.log(`üí° –ü–æ–ª—É—á–∏–ª–∏ –∏–Ω–¥–µ–∫—Å —Å—Ç—Ä–∞—Ö–∞ –∏ –∂–∞–¥–Ω–æ—Å—Ç–∏: ${fearGreedValue} (${fearGreedClassification})`);
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏–Ω–¥–µ–∫—Å–∞ —Å—Ç—Ä–∞—Ö–∞ –∏ –∂–∞–¥–Ω–æ—Å—Ç–∏
      // –ó–Ω–∞—á–µ–Ω–∏—è –≤—ã—à–µ 50 —Å—á–∏—Ç–∞—é—Ç—Å—è "–∂–∞–¥–Ω–æ—Å—Ç—å—é" (–ø–æ–∑–∏—Ç–∏–≤–Ω–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ)
      marketSentiment = parseInt(fearGreedValue) > 50 ? 'positive' : 'negative';
      sentimentSource = 'fear&greed';
    } catch (fgError) {
      console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω–¥–µ–∫—Å —Å—Ç—Ä–∞—Ö–∞ –∏ –∂–∞–¥–Ω–æ—Å—Ç–∏. –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –æ BTC –¥–ª—è –æ—Ü–µ–Ω–∫–∏...');
      
      try {
        // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω–¥–µ–∫—Å —Å—Ç—Ä–∞—Ö–∞ –∏ –∂–∞–¥–Ω–æ—Å—Ç–∏, —Å–º–æ—Ç—Ä–∏–º –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ BTC –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –¥–µ–Ω—å
        const btcResponse = await axios.get('https://api.coingecko.com/api/v3/coins/bitcoin');
        const btcPriceChange = btcResponse.data.market_data.price_change_percentage_24h;
        
        console.log(`üí° –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã BTC –∑–∞ 24—á: ${btcPriceChange}%`);
        
        // –ï—Å–ª–∏ —Ü–µ–Ω–∞ BTC –≤—ã—Ä–æ—Å–ª–∞, —Å—á–∏—Ç–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–º
        marketSentiment = btcPriceChange > 0 ? 'positive' : 'negative';
        sentimentSource = 'btc_price';
      } catch (btcError) {
        console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ BTC. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ...');
        
        // –ï—Å–ª–∏ –∏ —ç—Ç–æ –Ω–µ —É–¥–∞–ª–æ—Å—å, –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω–æ
        marketSentiment = Math.random() > 0.5 ? 'positive' : 'negative';
        sentimentSource = 'random';
      }
    }
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–∞
    // –í –Ω–∞—à–µ–π —Å–∏—Å—Ç–µ–º–µ: –±–æ–ª–µ–µ –Ω–∏–∑–∫–∏–π –∏–Ω–¥–µ–∫—Å = –≤—ã—Å–æ–∫–∏–π —Å—Ç—Ä–∞—Ö, –≤—ã—Å–æ–∫–∏–π –∏–Ω–¥–µ–∫—Å = –≤—ã—Å–æ–∫–∞—è –∂–∞–¥–Ω–æ—Å—Ç—å
    let indexValue;
    if (sentimentSource === 'fear&greed') {
      // –ï—Å–ª–∏ —É –Ω–∞—Å –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–Ω–¥–µ–∫—Å–∞ —Å—Ç—Ä–∞—Ö–∞ –∏ –∂–∞–¥–Ω–æ—Å—Ç–∏, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
      indexValue = Math.floor(Math.random() * 30) + (marketSentiment === 'positive' ? 60 : 10);
    } else {
      // –ò–Ω–∞—á–µ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å —É–∫–ª–æ–Ω–æ–º –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ–º
      indexValue = Math.floor(Math.random() * 40) + (marketSentiment === 'positive' ? 50 : 10);
    }
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é, –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—É—é —Ä—ã–Ω–æ—á–Ω–æ–º—É –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—é
    let recommendation;
    if (marketSentiment === 'positive') {
      if (indexValue > 80) {
        recommendation = "–í—Å–µ –≤ —ç–π—Ñ–æ—Ä–∏–∏? –°–∞–º–æ–µ –≤—Ä–µ–º—è –ø–∞–Ω–∏–∫–æ–≤–∞—Ç—å –∏ –ø—Ä–æ–¥–∞–≤–∞—Ç—å –≤—Å—ë –ø–æ–¥—á–∏—Å—Ç—É—é! –ö–æ–≥–¥–∞ —Ç–∞–∫—Å–∏—Å—Ç—ã –Ω–∞—á–∏–Ω–∞—é—Ç –¥–∞–≤–∞—Ç—å —Å–æ–≤–µ—Ç—ã –ø–æ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é, —É–º–Ω—ã–µ –∏–Ω–≤–µ—Å—Ç–æ—Ä—ã —É–∂–µ —É–ø–∞–∫–æ–≤—ã–≤–∞—é—Ç —á–µ–º–æ–¥–∞–Ω—ã.";
      } else {
        recommendation = "–†—ã–Ω–æ–∫ —Å–ª–∏—à–∫–æ–º –æ–ø—Ç–∏–º–∏—Å—Ç–∏—á–µ–Ω. –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏ —ç—Ç–æ –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø—Ä–µ–¥—Å—Ç–æ—è—â–µ–≥–æ –∫—Ä–∞—Ö–∞. –ü—Ä–∏–≥–æ—Ç–æ–≤—å—Ç–µ –ø–æ–ø–∫–æ—Ä–Ω –∏ –Ω–∞–±–ª—é–¥–∞–π—Ç–µ –∑–∞ –Ω–µ–∏–∑–±–µ–∂–Ω—ã–º —Ö–∞–æ—Å–æ–º.";
      }
    } else {
      if (indexValue < 20) {
        recommendation = "–í—Å–µ –ø–∞–Ω–∏–∫—É—é—Ç –∏ –ø—Ä–æ–¥–∞—é—Ç? –û—Ç–ª–∏—á–Ω–æ–µ –≤—Ä–µ–º—è –ø–æ–∫—É–ø–∞—Ç—å! –ï—Å–ª–∏, –∫–æ–Ω–µ—á–Ω–æ, –≤–∞–º –Ω—Ä–∞–≤–∏—Ç—Å—è –ª–æ–≤–∏—Ç—å –ø–∞–¥–∞—é—â–∏–µ –Ω–æ–∂–∏ –∏ –≤—ã –Ω–µ –±–æ–∏—Ç–µ—Å—å –ø–æ—Ç–µ—Ä—è—Ç—å –µ—â–µ –Ω–µ–º–Ω–æ–≥–æ –¥–µ–Ω–µ–≥... –∏–ª–∏ –º–Ω–æ–≥–æ.";
      } else {
        recommendation = "–†—ã–Ω–æ–∫ –≤ –¥–µ–ø—Ä–µ—Å—Å–∏–∏? –°–æ–≥–ª–∞—Å–Ω–æ –Ω–∞—à–µ–π –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏–≤–æ–π –ª–æ–≥–∏–∫–µ, —ç—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–∏–≥–Ω–∞–ª–æ–º –¥–ª—è –ø–æ–∫—É–ø–∫–∏. –ò–ª–∏ –Ω–µ—Ç. –ö—Ç–æ –∑–Ω–∞–µ—Ç? –¢–æ—á–Ω–æ –Ω–µ –º—ã.";
      }
    }
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ñ–∞–∫—Ç–æ—Ä—ã —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏
    const confidenceFactors = [
      {
        name: "FOMO –∏–Ω–¥–µ–∫—Å",
        value: Math.floor(Math.random() * 100),
        trend: Math.random() > 0.5 ? 'up' : 'down'
      },
      {
        name: "–ò–Ω–¥–µ–∫—Å –Ω—ã—Ç—å—è –≤ Twitter",
        value: Math.floor(Math.random() * 100),
        trend: Math.random() > 0.4 ? 'up' : 'down'
      },
      {
        name: "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ '—ç–∫—Å–ø–µ—Ä—Ç–æ–≤'",
        value: Math.floor(Math.random() * 40) + 60, // –í—Å–µ–≥–¥–∞ –º–Ω–æ–≥–æ "—ç–∫—Å–ø–µ—Ä—Ç–æ–≤"
        trend: 'up' // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ –≤—Å–µ–≥–¥–∞ —Ä–∞—Å—Ç–µ—Ç
      },
      {
        name: "–ò–Ω–¥–µ–∫—Å —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –ø–∞–Ω–∏–∫–∏",
        value: Math.floor(Math.random() * 100),
        trend: marketSentiment === 'positive' ? 'down' : 'up'
      }
    ];
    
    console.log(`‚úÖ –ò–Ω–¥–µ–∫—Å –¥–æ–≤–µ—Ä–∏—è —Å–æ–∑–¥–∞–Ω! –ó–Ω–∞—á–µ–Ω–∏–µ: ${indexValue}, –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ —Ä—ã–Ω–∫–∞: ${marketSentiment}`);
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const trustIndex = {
      indexValue: indexValue,
      marketSentiment: marketSentiment,
      recommendation: recommendation,
      confidenceFactors: confidenceFactors,
      sentimentSource: sentimentSource,
      timestamp: new Date().toISOString()
    };
    
    res.json(trustIndex);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–Ω–¥–µ–∫—Å–∞ –¥–æ–≤–µ—Ä–∏—è. –î–∞–∂–µ –Ω–∞—à –∏–Ω–¥–µ–∫—Å –Ω–µ–¥–æ–≤–µ—Ä–∏—è –Ω–µ–Ω–∞–¥–µ–∂–µ–Ω:', error);
    
    // –ó–∞–ø–∞—Å–Ω–æ–π –∏–Ω–¥–µ–∫—Å –¥–æ–≤–µ—Ä–∏—è, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫
    const backupTrustIndex = {
      indexValue: Math.floor(Math.random() * 100),
      marketSentiment: Math.random() > 0.5 ? 'positive' : 'negative',
      recommendation: "–ù–∞—à–∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç, –Ω–æ, —á–µ—Å—Ç–Ω–æ –≥–æ–≤–æ—Ä—è, –æ–Ω–∏ –Ω–∏–∫–æ–≥–¥–∞ –∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–ª–∏. –ü–æ–¥–±—Ä–∞—Å—ã–≤–∞–Ω–∏–µ –º–æ–Ω–µ—Ç–∫–∏ –¥–∞—Å—Ç –≤–∞–º —Ç–∞–∫—É—é –∂–µ —Ç–æ—á–Ω–æ—Å—Ç—å, –Ω–æ –±—É–¥–µ—Ç –¥–µ—à–µ–≤–ª–µ.",
      confidenceFactors: [
        {
          name: "–ò–Ω–¥–µ–∫—Å —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Å–±–æ–µ–≤",
          value: 100, // –ú–∞–∫—Å–∏–º—É–º, –≤–µ–¥—å —É –Ω–∞—Å —Å–±–æ–π
          trend: 'up'
        },
        {
          name: "–£—Ä–æ–≤–µ–Ω—å —Ç–æ—á–Ω–æ—Å—Ç–∏ –ø—Ä–æ–≥–Ω–æ–∑–æ–≤",
          value: Math.floor(Math.random() * 20), // –û—á–µ–Ω—å –Ω–∏–∑–∫–∏–π
          trend: 'down'
        }
      ],
      sentimentSource: 'backup',
      timestamp: new Date().toISOString()
    };
    
    res.status(500).json({ 
      message: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–Ω–¥–µ–∫—Å–∞ –¥–æ–≤–µ—Ä–∏—è. –ù–∞—à–∏ –∞–ª–≥–æ—Ä–∏—Ç–º—ã —Ç–∞–∫–∏–µ –∂–µ –Ω–µ–Ω–∞–¥–µ–∂–Ω—ã–µ, –∫–∞–∫ –∏ —Ä—ã–Ω–æ—á–Ω—ã–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è.',
      trustIndex: backupTrustIndex,
      error: process.env.NODE_ENV === 'development' ? error.message : 'Internal Server Error'
    });
  }
});

// –ü–æ–ª—É—á–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –∏–Ω–¥–µ–∫—Å–∞ –¥–æ–≤–µ—Ä–∏—è (—á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å, —á—Ç–æ –æ–Ω –≤—Å–µ–≥–¥–∞ –æ—à–∏–±–∞–ª—Å—è)
router.get('/history', async (req, res) => {
  try {
    console.log('üìà –ó–∞–ø—Ä–æ—Å –Ω–∞ –∏—Å—Ç–æ—Ä–∏—é –∏–Ω–¥–µ–∫—Å–∞ –¥–æ–≤–µ—Ä–∏—è. –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –Ω–∞—à–µ–π –Ω–µ–∫–æ–º–ø–µ—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏...');
    
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–¥–µ—Å—å –±—É–¥—É—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    // –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ
    
    const days = parseInt(req.query.days) || 30;
    const history = [];
    
    for (let i = 0; i < days; i++) {
      const date = new Date();
      date.setDate(date.getDate() - (days - i - 1));
      
      history.push({
        date: date.toISOString().split('T')[0],
        value: Math.floor(Math.random() * 100),
        marketSentiment: Math.random() > 0.5 ? 'positive' : 'negative'
      });
    }
    
    console.log(`‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–ª–∏ –∏—Å—Ç–æ—Ä–∏—é –∏–Ω–¥–µ–∫—Å–∞ –¥–æ–≤–µ—Ä–∏—è –∑–∞ ${days} –¥–Ω–µ–π. –£–¥–∏–≤–∏—Ç–µ–ª—å–Ω–æ, –∫–∞–∫ –º—ã –≤—Å–µ–≥–¥–∞ –æ—à–∏–±–∞–ª–∏—Å—å!`);
    
    res.json(history);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏—Å—Ç–æ—Ä–∏–∏ –∏–Ω–¥–µ–∫—Å–∞ –¥–æ–≤–µ—Ä–∏—è:', error);
    res.status(500).json({ 
      message: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –∏–Ω–¥–µ–∫—Å–∞ –¥–æ–≤–µ—Ä–∏—è. –ò—Å—Ç–æ—Ä–∏—è –Ω–∞—à–∏—Ö –æ—à–∏–±–æ–∫ —Å–ª–∏—à–∫–æ–º –≤–µ–ª–∏–∫–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏.',
      error: process.env.NODE_ENV === 'development' ? error.message : 'Internal Server Error'
    });
  }
});

module.exports = router;