// routes/astrology.js - –î–ª—è –∞–±—Å—É—Ä–¥–Ω—ã—Ö –ø—Å–µ–≤–¥–æ–Ω–∞—É—á–Ω—ã—Ö –≥—Ä–∞—Ñ–∏–∫–æ–≤ —Å –∞—Å—Ç—Ä–æ–ª–æ–≥–∏–µ–π
const express = require('express');
const router = express.Router();
const OpenAI = require('openai');
const axios = require('axios');

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ OpenAI
const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY
});

// –ö—ç—à –¥–ª—è –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö
const astrologyCache = new Map();

// –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å "–∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π" –≥—Ä–∞—Ñ–∏–∫
router.post('/chart', async (req, res) => {
  try {
    console.log('üå† –ó–∞–ø—Ä–æ—Å –Ω–∞ –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª–æ–∂–µ–Ω–∏–µ –∑–≤–µ–∑–¥ –∏ –ø–ª–∞–Ω–µ—Ç...');
    const { cryptoId, timeframe } = req.body;
    
    if (!cryptoId || !timeframe) {
      console.log('‚ùå –ù–µ —É–∫–∞–∑–∞–Ω–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞ –∏–ª–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø–µ—Ä–∏–æ–¥. –ó–≤–µ–∑–¥—ã –Ω–µ –º–æ–≥—É—Ç –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞—Ç—å –±–µ–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞!');
      return res.status(400).json({ 
        message: 'Crypto ID and timeframe are required',
        advice: '–£–∫–∞–∂–∏—Ç–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É –∏ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø–µ—Ä–∏–æ–¥ (week, month, quarter, year)'
      });
    }

    // –°–æ–∑–¥–∞–µ–º –∫–ª—é—á –∫—ç—à–∞ 
    const cacheKey = `${cryptoId}_${timeframe}`;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à (–ø–ª–∞–Ω–µ—Ç—ã –¥–≤–∏–≥–∞—é—Ç—Å—è –º–µ–¥–ª–µ–Ω–Ω–æ, –Ω–∞—à–∏ –≤—ã–¥—É–º–∫–∏ - –µ—â—ë –º–µ–¥–ª–µ–Ω–Ω–µ–µ)
    if (astrologyCache.has(cacheKey)) {
      console.log(`üß† –ù–∞—à–ª–∏ –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –≤ –∫—ç—à–µ! –ó–≤–µ–∑–¥—ã —Å–µ–≥–æ–¥–Ω—è –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∏ —Å–≤–æ–µ–≥–æ –º–Ω–µ–Ω–∏—è.`);
      return res.json(astrologyCache.get(cacheKey));
    }
    
    console.log(`üîÆ –°–æ–∑–¥–∞–µ–º –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –¥–ª—è ${cryptoId} –Ω–∞ –ø–µ—Ä–∏–æ–¥ ${timeframe}. –ß–∞–∫—Ä—ã, –∫–∞—Ä–º—ã –∏ –ø—Ä–æ—á–∞—è —á–µ–ø—É—Ö–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ...`);
    
    // –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ü–µ–Ω (—á—Ç–æ–±—ã –ø—Ä–∏–≤—è–∑–∞—Ç—å –Ω–∞—à –∞–±—Å—É—Ä–¥ –∫ —á–µ–º—É-—Ç–æ —Ä–µ–∞–ª—å–Ω–æ–º—É)
    let priceData;
    try {
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö
      const days = 
        timeframe === 'week' ? 7 : 
        timeframe === 'month' ? 30 : 
        timeframe === 'quarter' ? 90 : 365;
        
      const response = await axios.get(
        `https://api.coingecko.com/api/v3/coins/${cryptoId}/market_chart`, {
          params: {
            vs_currency: 'usd',
            days: days
          }
        }
      );
      
      priceData = response.data.prices.map(item => ({
        date: new Date(item[0]).toISOString().split('T')[0],
        price: item[1]
      }));
      
      console.log(`‚úÖ –ü–æ–ª—É—á–∏–ª–∏ ${priceData.length} —Ç–æ—á–µ–∫ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö. –¢–µ–ø–µ—Ä—å –¥–æ–±–∞–≤–∏–º –Ω–µ–º–Ω–æ–≥–æ –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –±—Ä–µ–¥–∞!`);
    } catch (priceError) {
      console.log(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è ${cryptoId}. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.`);
      
      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
      priceData = [];
      const days = 
        timeframe === 'week' ? 7 : 
        timeframe === 'month' ? 30 : 
        timeframe === 'quarter' ? 90 : 365;
        
      let price = 1000 + Math.random() * 1000;
      for (let i = 0; i < days; i++) {
        const date = new Date();
        date.setDate(date.getDate() - (days - i));
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –∫–æ–ª–µ–±–∞–Ω–∏—è —Ü–µ–Ω—ã
        price = price * (1 + (Math.random() * 0.1 - 0.05));
        
        priceData.push({
          date: date.toISOString().split('T')[0],
          price: price
        });
      }
    }
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º "–∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ" –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ —è–∫–æ–±—ã –≤–ª–∏—è—é—Ç –Ω–∞ —Ü–µ–Ω—É
    const chartData = priceData.map(item => {
      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ "–∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ" —Ñ–∞–∫—Ç–æ—Ä—ã
      const moonInfluence = 40 + Math.random() * 50; // –æ—Ç 40 –¥–æ 90
      const marsEnergy = 30 + Math.random() * 60; // –æ—Ç 30 –¥–æ 90
      
      // –°–ª—É—á–∞–π–Ω—ã–µ "–∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Å–æ–±—ã—Ç–∏—è" –ø—Ä–∏–º–µ—Ä–Ω–æ –≤ 10% —Å–ª—É—á–∞–µ–≤
      const hasAstroEvent = Math.random() > 0.9;
      
      return {
        date: item.date,
        price: item.price,
        moonInfluence: moonInfluence,
        marsEnergy: marsEnergy,
        astroEvent: hasAstroEvent ? getRandomAstroEvent() : null
      };
    });
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º "–∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Ñ–∞–∫—Ç–æ—Ä—ã" —Å –ø–æ–º–æ—â—å—é OpenAI
    const prompt = `
      –°–æ–∑–¥–∞–π —Ç—Ä–∏ –∞–±—Å—É—Ä–¥–Ω—ã—Ö, –Ω–æ –∑–≤—É—á–∞—â–∏—Ö –Ω–∞—É–∫–æ–æ–±—Ä–∞–∑–Ω–æ "–∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–∫—Ç–æ—Ä–∞", –∫–æ—Ç–æ—Ä—ã–µ —è–∫–æ–±—ã –≤–ª–∏—è—é—Ç –Ω–∞ —Ü–µ–Ω—É –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã ${cryptoId}.
      –ö–∞–∂–¥—ã–π —Ñ–∞–∫—Ç–æ—Ä –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –ø—Å–µ–≤–¥–æ–Ω–∞—É—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ, —Å–≤—è–∑–∞–Ω–Ω–æ–µ —Å –ø–ª–∞–Ω–µ—Ç–∞–º–∏ –∏–ª–∏ –∑–≤–µ–∑–¥–∞–º–∏, "–Ω–∞—É—á–Ω–æ–µ" –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –∏ –æ—Ü–µ–Ω–∫—É –≤–ª–∏—è–Ω–∏—è.
      
      –§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ JSON:
      [
        {
          "name": "–ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–∫—Ç–æ—Ä–∞ —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –ø–ª–∞–Ω–µ—Ç—ã/–∑–≤–µ–∑–¥—ã",
          "description": "–ü—Å–µ–≤–¥–æ–Ω–∞—É—á–Ω–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –≤–ª–∏—è–Ω–∏—è –Ω–∞ —Ü–µ–Ω—É",
          "impact": "strongly positive/positive/neutral/negative/strongly negative",
          "probability": —á–∏—Å–ª–æ –æ—Ç 50 –¥–æ 95
        },
        ...
      ]
    `;
    
    const response = await openai.chat.completions.create({
      model: "gpt-3.5-turbo",
      messages: [
        { role: "system", content: "–¢—ã - —Å–∞—Ä–∫–∞—Å—Ç–∏—á–Ω—ã–π –∞—Å—Ç—Ä–æ–ª–æ–≥ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç, —Å–æ–∑–¥–∞—é—â–∏–π –ø—Å–µ–≤–¥–æ–Ω–∞—É—á–Ω—ã–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è –¥–ª—è –¥–≤–∏–∂–µ–Ω–∏–π —Ä—ã–Ω–∫–∞." },
        { role: "user", content: prompt }
      ],
      temperature: 0.9,
      response_format: { type: "json_object" }
    });
    
    // –ü–∞—Ä—Å–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –∏—Å–ø—Ä–∞–≤–ª—è—è –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å JSON
    let astrologicalFactors;
    try {
      const responseContent = response.choices[0].message.content;
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ª–∏ –∫–æ–Ω—Ç–µ–Ω—Ç —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –æ—Ç–∫—Ä—ã–≤–∞—é—â–µ–π —Å–∫–æ–±–∫–∏ JSON –º–∞—Å—Å–∏–≤–∞
      if (responseContent.trim().startsWith('{')) {
        // –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç –≤ –æ–±—ä–µ–∫—Ç–µ, –ø—ã—Ç–∞–µ–º—Å—è –∏–∑–≤–ª–µ—á—å –º–∞—Å—Å–∏–≤
        const parsedResponse = JSON.parse(responseContent);
        astrologicalFactors = Array.isArray(parsedResponse) ? parsedResponse : 
                              parsedResponse.factors || parsedResponse.astrologicalFactors;
      } else {
        // –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ —Å –º–∞—Å—Å–∏–≤–∞
        astrologicalFactors = JSON.parse(responseContent);
      }
      
      // –ï—Å–ª–∏ –≤—Å–µ –µ—â—ë –Ω–µ—Ç –º–∞—Å—Å–∏–≤–∞, —Å–æ–∑–¥–∞–µ–º –∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç
      if (!Array.isArray(astrologicalFactors)) {
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –º–∞—Å—Å–∏–≤ —Ñ–∞–∫—Ç–æ—Ä–æ–≤');
      }
    } catch (jsonError) {
      console.error('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON –æ—Ç–≤–µ—Ç–∞ –æ—Ç OpenAI:', jsonError);
      // –ó–∞–ø–∞—Å–Ω—ã–µ —Ñ–∞–∫—Ç–æ—Ä—ã, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –æ—Ç–≤–µ—Ç
      astrologicalFactors = [
        {
          name: "–õ—É–Ω–Ω–∞—è —Ä–µ—Ç–∏–∫—É–ª—è—Ü–∏—è",
          description: "–õ—É–Ω–∞ –≤ —Ç—Ä–µ—Ç—å–µ–º –¥–æ–º–µ —Å–æ–∑–¥–∞–µ—Ç –∏–¥–µ–∞–ª—å–Ω—É—é —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫—É—é –º–∞—Ç—Ä–∏—Ü—É –¥–ª—è —Ä–æ—Å—Ç–∞ —Ü–µ–Ω—ã.",
          impact: "strongly positive",
          probability: 78
        },
        {
          name: "–ú–∞—Ä—Å–∏–∞–Ω—Å–∫–∏–π —Ä–∞–∑–≤–æ—Ä–æ—Ç",
          description: "–ú–∞—Ä—Å –¥–≤–∏–∂–µ—Ç—Å—è —Ä–µ—Ç—Ä–æ–≥—Ä–∞–¥–Ω–æ, —á—Ç–æ —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—É—é –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å.",
          impact: "negative",
          probability: 65
        },
        {
          name: "–í–µ–Ω–µ—Ä–∏–∞–Ω—Å–∫–∞—è –∫–æ–Ω–≤–µ—Ä–≥–µ–Ω—Ü–∏—è",
          description: "–í–µ–Ω–µ—Ä–∞ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —Ç—Ä–∏–Ω —Å –Æ–ø–∏—Ç–µ—Ä–æ–º, —Å–æ–∑–¥–∞–≤–∞—è –±–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω—ã–π –∞—Å–ø–µ–∫—Ç –¥–ª—è –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤.",
          impact: "positive",
          probability: 82
        }
      ];
    }
    
    console.log('‚úÖ –ê—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ —Å–æ–∑–¥–∞–Ω! –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –æ–±–º–∞–Ω—ã–≤–∞—Ç—å –ª—é–¥–µ–π –ø–æ-–Ω–∞—Å—Ç–æ—è—â–µ–º—É –Ω–∞—É—á–Ω–æ.');
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const astrologyResult = {
      chartData: chartData,
      astrologicalFactors: astrologicalFactors
    };
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫—ç—à (–∑–≤–µ–∑–¥—ã –¥–≤–∏–∂—É—Ç—Å—è –º–µ–¥–ª–µ–Ω–Ω–æ, –Ω–∞—à–∏ –≤—ã–¥—É–º–∫–∏ - –µ—â—ë –º–µ–¥–ª–µ–Ω–Ω–µ–µ)
    astrologyCache.set(cacheKey, astrologyResult);
    
    res.json(astrologyResult);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞. –ó–≤–µ–∑–¥—ã —Å–µ–≥–æ–¥–Ω—è –Ω–µ –≤ –Ω–∞—à—É –ø–æ–ª—å–∑—É:', error);
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∑–∞–ø–∞—Å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞
    const backupChartData = [];
    const days = 
      req.body.timeframe === 'week' ? 7 : 
      req.body.timeframe === 'month' ? 30 : 
      req.body.timeframe === 'quarter' ? 90 : 365;
    
    let price = 1000 + Math.random() * 1000;
    for (let i = 0; i < days; i++) {
      const date = new Date();
      date.setDate(date.getDate() - (days - i));
      
      price = price * (1 + (Math.random() * 0.1 - 0.05));
      const moonInfluence = 40 + Math.random() * 50;
      const marsEnergy = 30 + Math.random() * 60;
      
      backupChartData.push({
        date: date.toISOString().split('T')[0],
        price: price,
        moonInfluence: moonInfluence,
        marsEnergy: marsEnergy,
        astroEvent: i % 10 === 0 ? getRandomAstroEvent() : null
      });
    }
    
    // –ó–∞–ø–∞—Å–Ω—ã–µ –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Ñ–∞–∫—Ç–æ—Ä—ã
    const backupFactors = [
      {
        name: "–ú–µ—Ä–∫—É—Ä–∏–∞–Ω—Å–∫–∞—è –∏–Ω–≤–µ—Ä—Å–∏—è",
        description: "–†–µ—Ç—Ä–æ–≥—Ä–∞–¥–Ω—ã–π –ú–µ—Ä–∫—É—Ä–∏–π —Å–æ–∑–¥–∞–µ—Ç —ç–ª–µ–∫—Ç—Ä–æ–º–∞–≥–Ω–∏—Ç–Ω—ã–µ –∫–æ–ª–µ–±–∞–Ω–∏—è –≤ –±–ª–æ–∫—á–µ–π–Ω–µ.",
        impact: "negative",
        probability: 73
      },
      {
        name: "–°–∞—Ç—É—Ä–Ω–∏–∞–Ω—Å–∫–∏–π –∏–Ω–¥–µ–∫—Å HODL",
        description: "–°–∞—Ç—É—Ä–Ω –≤ —Å–æ–∑–≤–µ–∑–¥–∏–∏ –ë—ã–∫–∞ —É–∫—Ä–µ–ø–ª—è–µ—Ç —Ä–µ—à–∏–º–æ—Å—Ç—å –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã—Ö –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤.",
        impact: "positive",
        probability: 68
      },
      {
        name: "–ü–ª—É—Ç–æ–Ω–∏—á–µ—Å–∫–∞—è —Ä–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è",
        description: "–ü–ª—É—Ç–æ–Ω –º–µ–Ω—è–µ—Ç —Å–≤–æ—é —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫—É—é —Å–∏–≥–Ω–∞—Ç—É—Ä—É, —á—Ç–æ –∫–æ—Ä—Ä–µ–ª–∏—Ä—É–µ—Ç —Å –æ–Ω—á–µ–π–Ω-–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é.",
        impact: "strongly positive",
        probability: 81
      }
    ];
    
    const backupResult = {
      chartData: backupChartData,
      astrologicalFactors: backupFactors
    };
    
    res.status(500).json({ 
      message: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞. –ó–≤–µ–∑–¥—ã —Å–µ–≥–æ–¥–Ω—è –Ω–µ –≤ –Ω–∞—à—É –ø–æ–ª—å–∑—É.',
      result: backupResult,
      error: process.env.NODE_ENV === 'development' ? error.message : 'Internal Server Error'
    });
  }
});

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª—É—á–∞–π–Ω—ã—Ö "–∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö —Å–æ–±—ã—Ç–∏–π"
function getRandomAstroEvent() {
  const events = [
    "–ü–ª–∞–Ω–µ—Ç–∞—Ä–Ω–æ–µ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ",
    "–°–æ–ª–Ω–µ—á–Ω–æ–µ –∑–∞—Ç–º–µ–Ω–∏–µ",
    "–õ—É–Ω–Ω—ã–π –ø–∞—Ä–∞–¥–æ–∫—Å",
    "–ú–µ—Ä–∫—É—Ä–∏–π —Ä–µ—Ç—Ä–æ–≥—Ä–∞–¥–Ω—ã–π",
    "–Æ–ø–∏—Ç–µ—Ä–∏–∞–Ω—Å–∫–∏–π –∏–º–ø—É–ª—å—Å",
    "–í–µ–Ω–µ—Ä–∏–∞–Ω—Å–∫–∞—è –≥–∞—Ä–º–æ–Ω–∏–∑–∞—Ü–∏—è",
    "–°–∞—Ç—É—Ä–Ω–∏–∞–Ω—Å–∫–∏–π —Ü–∏–∫–ª",
    "–ú–∞—Ä—Å–∏–∞–Ω—Å–∫–æ–µ –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ",
    "–ù–µ–ø—Ç—É–Ω–∏–∞–Ω—Å–∫–∞—è –≤–æ–ª–Ω–∞",
    "–ü–ª—É—Ç–æ–Ω–∏—á–µ—Å–∫–∞—è —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è"
  ];
  return events[Math.floor(Math.random() * events.length)];
}

module.exports = router;