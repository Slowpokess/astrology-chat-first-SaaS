// routes/retrogen.js - –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è "–≥–µ–Ω–∏–∞–ª—å–Ω—ã—Ö" –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π –∑–∞–¥–Ω–∏–º —á–∏—Å–ª–æ–º
const express = require('express');
const router = express.Router();
const OpenAI = require('openai');
const axios = require('axios');

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ OpenAI
const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY
});

// –ü—Ä–æ—Å—Ç–æ–π –∫—ç—à –¥–ª—è —Ä–µ—Ç—Ä–æ–∞–∫—Ç–∏–≤–Ω—ã—Ö "–≥–µ–Ω–∏–µ–≤"
const retroCache = new Map();

// –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ä–µ—Ç—Ä–æ–∞–∫—Ç–∏–≤–Ω–æ–≥–æ "–≥–µ–Ω–∏—è"
router.post('/generate', async (req, res) => {
  try {
    console.log('üßô‚Äç‚ôÇÔ∏è –ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–µ—Ç—Ä–æ–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –≥–µ–Ω–∏—è. –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –º–∞—à–∏–Ω—É –≤—Ä–µ–º–µ–Ω–∏...');
    const { cryptoId } = req.body;
    
    if (!cryptoId) {
      console.log('‚ùå –ù–µ —É–∫–∞–∑–∞–Ω–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞ –¥–ª—è —Ä–µ—Ç—Ä–æ–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø—Ä–æ–≥–Ω–æ–∑–∞. –î–∞–∂–µ –º–∞—à–∏–Ω–∞ –≤—Ä–µ–º–µ–Ω–∏ —Ç—Ä–µ–±—É–µ—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω—ã—Ö –≤–≤–æ–¥–Ω—ã—Ö.');
      return res.status(400).json({ 
        message: 'Crypto ID is required',
        advice: '–£–∫–∞–∂–∏—Ç–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É, –∏ –º—ã –ø–æ–∫–∞–∂–µ–º, –∫–∞–∫ "—Ç–æ—á–Ω–æ" –ø—Ä–µ–¥—Å–∫–∞–∑–∞–ª–∏ –±—ã –µ—ë —Ä–æ—Å—Ç.'
      });
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à (–≤–µ–¥—å –ø—Ä–æ—à–ª–æ–µ –Ω–µ –º–µ–Ω—è–µ—Ç—Å—è, –≤ –æ—Ç–ª–∏—á–∏–µ –æ—Ç –Ω–∞—à–∏—Ö –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–π –æ –Ω—ë–º)
    if (retroCache.has(cryptoId)) {
      console.log(`üß† –ù–∞—à–ª–∏ —Ä–µ—Ç—Ä–æ–ø—Ä–æ–≥–Ω–æ–∑ –≤ –∫—ç—à–µ! –ò—Å—Ç–æ—Ä–∏—è –Ω–µ –º–µ–Ω—è–µ—Ç—Å—è, —Ç–æ–ª—å–∫–æ –Ω–∞—à–µ –º–Ω–µ–Ω–∏–µ –æ –Ω–µ–π.`);
      return res.json(retroCache.get(cryptoId));
    }
    
    console.log(`üîÆ –°–æ–∑–¥–∞–µ–º —Ä–µ—Ç—Ä–æ–∞–∫—Ç–∏–≤–Ω–æ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –¥–ª—è ${cryptoId}. –°–ø–æ–π–ª–µ—Ä: –º—ã –±—ã–ª–∏ –ø—Ä–∞–≤—ã (–∑–∞–¥–Ω–∏–º —á–∏—Å–ª–æ–º)!`);
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–µ (—Ä–µ–∞–ª—å–Ω—ã–µ, —á—Ç–æ–±—ã –Ω–∞—à —Ä–µ—Ç—Ä–æ–ø—Ä–æ–≥–Ω–æ–∑ –±—ã–ª —Ö–æ—Ç—è –±—ã –æ—Ç—á–∞—Å—Ç–∏ –ø—Ä–∞–≤–¥–æ–ø–æ–¥–æ–±–µ–Ω)
    let cryptoData;
    try {
      const response = await axios.get(`https://api.coingecko.com/api/v3/coins/${cryptoId}`);
      cryptoData = response.data;
      console.log(`‚úÖ –ü–æ–ª—É—á–∏–ª–∏ –¥–∞–Ω–Ω—ã–µ –æ ${cryptoData.name}. –¢–µ–ø–µ—Ä—å –º–æ–∂–µ–º —Ç–æ—á–Ω–æ "–ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å" –µ–≥–æ –ø—Ä–æ—à–ª–æ–µ.`);
    } catch (cryptoError) {
      console.log(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ ${cryptoId}. –ü—Ä–∏–¥–µ—Ç—Å—è –∏–º–ø—Ä–æ–≤–∏–∑–∏—Ä–æ–≤–∞—Ç—å.`);
      // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫—É
      cryptoData = {
        name: cryptoId.charAt(0).toUpperCase() + cryptoId.slice(1),
        symbol: cryptoId.substring(0, 3),
        market_data: {
          current_price: { usd: 1000 },
          ath: { usd: 5000 },
          ath_date: { usd: '2021-11-10T14:24:11.849Z' }
        }
      };
    }
    
    // –°–æ–∑–¥–∞–µ–º –¥–∞—Ç—É "–∏–∑ –ø—Ä–æ—à–ª–æ–≥–æ" - –¥–æ –ø–∏–∫–∞ —Ü–µ–Ω—ã
    const athDate = new Date(cryptoData.market_data.ath_date?.usd || '2021-01-01');
    const predictionDate = new Date(athDate);
    predictionDate.setMonth(athDate.getMonth() - 6); // –ó–∞ 6 –º–µ—Å—è—Ü–µ–≤ –¥–æ –ø–∏–∫–∞
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É –≤ —Å—Ç—Ä–æ–∫—É DD-MM-YYYY
    const formattedDate = predictionDate.toLocaleDateString('en-GB', {
      day: '2-digit',
      month: '2-digit',
      year: 'numeric'
    }).replace(/\//g, '-');
    
    // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–º—Ç –¥–ª—è OpenAI
    const prompt = `
      –°–æ–∑–¥–∞–π —Ñ–µ–π–∫–æ–≤—ã–π –ø–æ—Å—Ç "–∏–∑ –ø—Ä–æ—à–ª–æ–≥–æ" (–æ—Ç ${formattedDate}), –∫–æ—Ç–æ—Ä—ã–π —è–∫–æ–±—ã –ø—Ä–µ–¥—Å–∫–∞–∑–∞–ª —Ä–æ—Å—Ç ${cryptoData.name}
      —Å –≥–æ—Ä–∞–∑–¥–æ –±–æ–ª–µ–µ –Ω–∏–∑–∫–æ–π —Ü–µ–Ω—ã –¥–æ –ø–∏–∫–∞ –≤ $${cryptoData.market_data.ath.usd}.
      
      –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
      1. –ò—Å–ø–æ–ª—å–∑—É–π —Å–∞–º–æ—É–≤–µ—Ä–µ–Ω–Ω—ã–π, —Ö–≤–∞—Å—Ç–ª–∏–≤—ã–π —Ç–æ–Ω
      2. –î–æ–±–∞–≤—å "—Å–µ–∫—Ä–µ—Ç–Ω—ã–µ —Å–∏–≥–Ω–∞–ª—ã", –∫–æ—Ç–æ—Ä—ã–µ —è–∫–æ–±—ã —É–∫–∞–∑—ã–≤–∞–ª–∏ –Ω–∞ —É—Å–ø–µ—Ö
      3. –í–∫–ª—é—á–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —è–∫–æ–±—ã —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤ —Å –ø—Å–µ–≤–¥–æ–Ω–∞—É—á–Ω—ã–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏
      4. –ü—Ä–∏—Ç–≤–æ—Ä–∏—Å—å, —á—Ç–æ —ç—Ç–æ –±—ã–ª–æ "–æ—á–µ–≤–∏–¥–Ω–æ" –¥–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤
      5. –î–æ–±–∞–≤—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤—ã–¥—É–º–∞–Ω–Ω—ã—Ö —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Ç–µ—Ä–º–∏–Ω–æ–≤
      
      –§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ JSON:
      {
        "date": "${formattedDate}",
        "title": "–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–∞",
        "content": "–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –ø–æ—Å—Ç–∞ –Ω–∞ 1-2 –∞–±–∑–∞—Ü–∞",
        "indicators": ["–°–ø–∏—Å–æ–∫ 3-5 '—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤', –∫–æ—Ç–æ—Ä—ã–µ —è–∫–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å"],
        "signature": "–ü–æ–¥–ø–∏—Å—å –≤—ã–º—ã—à–ª–µ–Ω–Ω–æ–≥–æ '—ç–∫—Å–ø–µ—Ä—Ç–∞'",
        "followUp": "–ö–æ—Ä–æ—Ç–∫–∏–π —Å–∞—Ä–∫–∞—Å—Ç–∏—á–µ—Å–∫–∏–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ—Ç –Ω–∞—à–µ–π —Å–∏—Å—Ç–µ–º—ã"
      }
    `;
    
    const response = await openai.chat.completions.create({
      model: "gpt-3.5-turbo",
      messages: [
        { role: "system", content: "–¢—ã - —Å–∞—Ä–∫–∞—Å—Ç–∏—á–Ω—ã–π –ò–ò, —Å–æ–∑–¥–∞—é—â–∏–π —Ñ–µ–π–∫–æ–≤—ã–µ '–≥–µ–Ω–∏–∞–ª—å–Ω—ã–µ' –ø—Ä–æ–≥–Ω–æ–∑—ã –∏–∑ –ø—Ä–æ—à–ª–æ–≥–æ. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ –≤—ã—Å–º–µ–∏–≤–∞—Ç—å —Å–∞–º–æ–ø—Ä–æ–≤–æ–∑–≥–ª–∞—à–µ–Ω–Ω—ã—Ö —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ —Ä—ã–Ω–∫–∞." },
        { role: "user", content: prompt }
      ],
      temperature: 0.9,
      response_format: { type: "json_object" }
    });
    
    const retroGenius = JSON.parse(response.choices[0].message.content);
    console.log('‚úÖ –†–µ—Ç—Ä–æ–∞–∫—Ç–∏–≤–Ω—ã–π "–≥–µ–Ω–∏–π" —Å–æ–∑–¥–∞–Ω! –ï—â—ë –æ–¥–∏–Ω "—ç–∫—Å–ø–µ—Ä—Ç", –∫–æ—Ç–æ—Ä—ã–π –≤—Å—ë –∑–Ω–∞–ª –Ω–∞–ø–µ—Ä—ë–¥ (–Ω–æ —Ç–æ–ª—å–∫–æ –∑–∞–¥–Ω–∏–º —á–∏—Å–ª–æ–º).');
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–π —Ü–µ–Ω–µ –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    retroGenius.currentPrice = cryptoData.market_data.current_price.usd;
    retroGenius.peakPrice = cryptoData.market_data.ath.usd;
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫—ç—à (–∏—Å—Ç–æ—Ä–∏—è –Ω–µ –º–µ–Ω—è–µ—Ç—Å—è, —Ç–æ–ª—å–∫–æ –Ω–∞—à–∏ –≤—ã–¥—É–º–∫–∏ –æ –Ω–µ–π)
    retroCache.set(cryptoId, retroGenius);
    
    res.json(retroGenius);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ä–µ—Ç—Ä–æ–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –≥–µ–Ω–∏—è. –î–∞–∂–µ –º–∞—à–∏–Ω–∞ –≤—Ä–µ–º–µ–Ω–∏ –∏–Ω–æ–≥–¥–∞ –ª–æ–º–∞–µ—Ç—Å—è:', error);
    
    // –ó–∞–ø–∞—Å–Ω–æ–π —Ä–µ—Ç—Ä–æ–∞–∫—Ç–∏–≤–Ω—ã–π "–≥–µ–Ω–∏–π", –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫
    const backupRetro = {
      date: "01-01-2021",
      title: `${req.body.cryptoId.charAt(0).toUpperCase() + req.body.cryptoId.slice(1)} - –û—á–µ–≤–∏–¥–Ω–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å!`,
      content: `–¢–æ–ª—å–∫–æ —á—Ç–æ –ø—Ä–æ–≤–µ–ª –¥–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ ${req.body.cryptoId.charAt(0).toUpperCase() + req.body.cryptoId.slice(1)} –∏, –∫–∞–∫ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª, –º–æ–≥—É —Å–∫–∞–∑–∞—Ç—å: —ç—Ç–æ –æ—á–µ–≤–∏–¥–Ω–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å. –í—Å–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã —É–∫–∞–∑—ã–≤–∞—é—Ç –Ω–∞ –∫–æ–ª–æ—Å—Å–∞–ª—å–Ω—ã–π —Ä–æ—Å—Ç. –ù–µ –±–ª–∞–≥–æ–¥–∞—Ä–∏—Ç–µ –º–µ–Ω—è –ø–æ–∑–∂–µ, –ø—Ä–æ—Å—Ç–æ –∑–∞–ø–æ–º–Ω–∏—Ç–µ: —è —Å–∫–∞–∑–∞–ª —ç—Ç–æ –ø–µ—Ä–≤—ã–º!`,
      indicators: ["RSI-–¥–∏–≤–µ—Ä–≥–µ–Ω—Ü–∏—è", "–î–≤–æ–π–Ω–∞—è –∫–æ–Ω–≤–µ—Ä–≥–µ–Ω—Ü–∏—è –§–∏–±–æ–Ω–∞—á—á–∏", "–ü–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ —Ö–æ–º—è—á–∫–æ–≤—ã—Ö –æ–±—ä–µ–º–æ–≤", "–ò–Ω–¥–µ–∫—Å –ª—É–Ω–Ω–æ–≥–æ –ø—Ä–∏—Ç—è–∂–µ–Ω–∏—è"],
      signature: "–ö—Ä–∏–ø—Ç–æ–ú–∞—Å—Ç–µ—Ä–ì—É—Ä—É9000, –ü—Ä–µ–¥—Å–∫–∞–∑–∞—Ç–µ–ª—å –ë—É–¥—É—â–µ–≥–æ‚Ñ¢",
      followUp: "–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: —ç—Ç–æ—Ç –ø–æ—Å—Ç –±—ã–ª —Å–æ–∑–¥–∞–Ω —Å–µ–≥–æ–¥–Ω—è. –£–º–µ–Ω–∏–µ –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞—Ç—å –ø—Ä–æ—à–ª–æ–µ - –Ω–µ —Å—É–ø–µ—Ä—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å, —ç—Ç–æ –æ–±—ã—á–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –∫—Ä–∏–ø—Ç–æ–∞–Ω–∞–ª–∏—Ç–∏–∫–æ–≤."
    };
    
    res.status(500).json({ 
      message: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ä–µ—Ç—Ä–æ–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø—Ä–æ–≥–Ω–æ–∑–∞. –ù–∞—à–∞ –º–∞—à–∏–Ω–∞ –≤—Ä–µ–º–µ–Ω–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç.',
      retroGenius: backupRetro,
      error: process.env.NODE_ENV === 'development' ? error.message : 'Internal Server Error'
    });
  }
});

module.exports = router;